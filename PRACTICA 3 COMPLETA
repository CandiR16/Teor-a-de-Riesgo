install.packages("vcd")
library(vcd)

install.packages("fitdistrplus")
library(fitdistrplus)

datos<-data.frame(unidades=c(rep(0,109),rep(1,65),rep(2,22),rep(3,3),4))
View(datos)
summary(datos)
frec=(table(datos))
frec
hist(datos$unidades, col="blue", main="Siniestros")
lambda=fitdistr(datos$unidades,"normal")
lambda
lambda2=ajuste.poisson$estimate

est<-rnorm(1000,lambda=lambda$estimate)
View(est)
hist(est)
table(est)

datosestimados<-200*dpois(0:4,lambda$estimate)
datosestimados
View(datosestimados)
hist(datos$unidades, breaks=-0.5:4.5, freq=TRUE,xlab="Numero de Siniestros",ylab="Casos", col="purple") 
lines(0:4,200*dpois(0:4,lambda$estimate), col="red")

#Ejemplo de Ajustes
# n igual a 1000 se va simular una variable x igual rpois (n,3)
n=1000
x<-rpois(n,3)
hist(x)

ajuste=goodfit(x,type="poisson", method="MinChisq")
ajuste$par
summary(ajuste)
plot(ajuste)


par (mfrow=c(1,2))
#Simulacion de una Normal
x <- rnorm(n,20,3)
hist(x, col="red") 

#Simulacion de una Gama
y <- rgamma(n,1,3)
hist(y, col="green") 

ajuste=fitdist(x,distr="norm")
ajuste$estimate
summary(ajuste)
plot(ajuste)

ajuste=fitdist(x,distr="gamma")
ajuste$estimate
summary(ajuste)
plot(ajuste)
media=ajuste$estimate[1]
sd=ajuste$estimate[2]
media
sd

#prueba de estadisticos
shapiro.test(x)  #si el W estadistico es cercano a uno quiere decir que los datos si se acercan a una normal

ajusteng=fitdist(y, distr="norm")
ajusteng

