n <- 81
sumyes <- 51
priorposterior <- function(a,b){
u <- seq(0,1,length=251)
prior <- dbeta(u,a,b)
posterior <- dbeta(u,sumyes+a,n-sumyes+b)
plot(u,posterior,type="l",lwd=2)
lines(u,prior,lty=2)
abline(v=(sumyes+a)/(n+a+b),col="grey")}

n <- 7
Claims <- data.frame(originf = factor(rep(2007:2013, n:1)),
dev=sequence(n:1),
inc.paid=c(3511, 3215, 2266, 1712, 1059, 587,
340, 4001, 3702, 2278, 1180, 956,
629, 4355, 3932, 1946, 1522, 1238,
4295, 3455, 2023, 1320, 4150, 3747,
2320, 5102, 4548, 6283))

(inc.triangle <- with(Claims, {
M <- matrix(nrow=n, ncol=n,
dimnames=list(origin=levels(originf), dev=1:n))
M[cbind(originf, dev)] <- inc.paid
M
}))

(cum.triangle <- t(apply(inc.triangle, 1, cumsum)))

(latest.paid <- cum.triangle[row(cum.triangle) == n - col(cum.triangle) + 1])

Claims$cum.paid <- cum.triangle[with(Claims, cbind(originf, dev))]


op <- par(fig=c(0,0.5,0,1), cex=0.8, oma=c(0,0,0,0))
with(Claims, {
interaction.plot(x.factor=dev, trace.factor=originf, response=inc.paid,
fun=sum, type="b", bty='n', legend=FALSE); axis(1, at=1:n)
par(fig=c(0.45,1,0,1), new=TRUE, cex=0.8, oma=c(0,0,0,0))
interaction.plot(x.factor=dev, trace.factor=originf, response=cum.paid,
fun=sum, type="b", bty='n'); axis(1,at=1:n)
})
mtext("Incremental and cumulative claims development",
side=3, outer=TRUE, line=-3, cex = 1.1, font=2)
par(op)

#install.packages("lattice")

#library(lattice)
xyplot(cum.paid ~ dev | originf, data=Claims, t="b", layout=c(4,2),
as.table=TRUE, main="Cumulative claims development")

f <- sapply((n-1):1, function(i) {
sum( cum.triangle[1:i, n-i+1] ) / sum( cum.triangle[1:i, n-i] )
})

tail <- 1
(f <- c(f, tail))

full.triangle <- cum.triangle
for(k in 1:(n-1)){
full.triangle[(n-k+1):n, k+1] <- full.triangle[(n-k+1):n,k]*f[k]
}
full.triangle

(ultimate.paid <- full.triangle[,n])

(ldf <- rev(cumprod(rev(f))))

(dev.pattern <- 1/ldf)
(reserve <- sum (latest.paid * (ldf - 1)))
sum(ultimate.paid - latest.paid)

a <- ultimate.paid
(b <- c(dev.pattern[1], diff(dev.pattern)))
(X.hat <- a %*% t(b))

(BF2013 <- ultimate.paid[n] * dev.pattern[1] + 20000 * (1 - dev.pattern[1]))

dat <- data.frame(lf1=log(f[-c(1,n)]-1), dev=2:(n-1))
(m <- lm(lf1 ~ dev , data=dat))

lm(formula = lf1 ~ dev, data = dat)

plot(lf1 ~ dev, main="log(f - 1) ~ dev", data=dat, bty='n')
abline(m)
sigma <- summary(m)$sigma
extrapolation <- predict(m, data.frame(dev=n:100))
(tail <- prod(exp(extrapolation + 0.5*sigma^2) + 1))

****************error 553**********

#install.packages("ChainLadder")
#library(ChainLadder)
ata(cum.triangle)

names(Claims)[3:4] <- c("inc.paid.k", "cum.paid.k")
ids <- with(Claims, cbind(originf, dev))
Claims <- within(Claims,{
cum.paid.kp1 <- cbind(cum.triangle[,-1], NA)[ids]
inc.paid.kp1 <- cbind(inc.triangle[,-1], NA)[ids]
devf <- factor(dev)
}
)

delta <- 0:2
ATA <- sapply(delta, function(d)
coef(lm(cum.paid.kp1 ~ 0 + cum.paid.k : devf,
weights=1/cum.paid.k^d, data=Claims))
)
dimnames(ATA)[[2]] <- paste("Delta = ", delta)
ATA

xyplot(cum.paid.kp1 ~ cum.paid.k | devf,
data=subset(Claims, dev < (n-1)),
main="Age-to-age developments", as.table=TRUE,
scales=list(relation="free"),
key=list(columns=2, lines=list(lty=1:4, type="l"),
text=list(lab=c("lm(y ~ x)",
"lm(y ~ 0 + x)",
"lm(y ~ 0 + x, w=1/x)",
"lm(y ~ 0 + x, w=1/x^2)"))),
panel=function(x,y,...){
panel.xyplot(x,y,...)
if(length(x)>1){
panel.abline(lm(y ~ x), lty=1)


panel.abline(lm(y ~ 0 + x), lty=2)
panel.abline(lm(y ~ 0 + x, weights=1/x), lty=3)
panel.abline(lm(y ~ 0 + x, , weights=1/x^2), lty=4)
}
}
)


#*****************MODELO MACK

#library(ChainLadder)
(mack <- MackChainLadder(cum.triangle, weights=1, alpha=1,
est.sigma="Mack"))
MackChainLadder(Triangle = cum.triangle, weights = 1, alpha = 1,
est.sigma = "Mack")

#***********************bootstrap

set.seed(1)
B <- BootChainLadder(cum.triangle, R=1000, process.distr="od.pois"))
BootChainLadder(Triangle = cum.triangle, R = 1000, process.distr = "od.pois")
